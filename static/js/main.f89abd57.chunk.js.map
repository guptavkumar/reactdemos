{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","class","href","className","Counter","style","fontSize","fontWeight","this","props","onIncrement","counter","onDelete","formatCount","onClick","id","value","console","log","Component","Counters","counters","onReset","map","pp","ps","App","state","handleDelete","counterId","updatedCounters","filter","setState","handleIncrement","countersCopy","index","indexOf","HandleReset","resetCounters","c","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f89abd57.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst  NavBar = ({totalCounters}) => {\r\n  return (  <nav class=\"navbar navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n\r\n <span className=\"badge badge-pill badge-secondary\"> {totalCounters}</span>\r\n</nav>);\r\n}\r\n \r\nexport default NavBar;\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n     \r\nstyle = {\r\n    fontSize:20,\r\n    fontWeight:\"bold\"\r\n}\r\n      \r\n    \r\n    render() {\r\nconst {onIncrement,counter,onDelete} = this.props;\r\nreturn (\r\n    \r\n     <div>\r\n         <span style={this.style} className=\"badge badge-primary m-2\">{this.formatCount()}</span>\r\n        \r\n         <button onClick={()=>onIncrement(counter)} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n         <button onClick={()=>onDelete(counter.id)} className=\"btn btn-danger btn-sm m-2\">Delete</button>\r\n         <br/>\r\n         </div>\r\n         );\r\n    }\r\n\r\n    formatCount()\r\n    {\r\n        const {value: value} = this.props.counter;\r\n      \r\n        return this.props.counter.value === 0 ? \"Zero\":this.props.counter.value;\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        console.log(\"Counter deleted\");\r\n    }\r\n}\r\n \r\nexport default Counter;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n        render() {\r\n            console.log(\"Counter component rendered\");\r\n            const {counters,onIncrement,onReset,onDelete}=this.props;\r\n        return ( \r\n             <div>\r\n                 \r\n                 <button onClick={onReset} className=\"btn btn-primary btn-sm btn-m2\">Reset</button>\r\n                 {counters.map(counter=><Counter \r\n                 onDelete={onDelete} key={counter.id} counter={counter} onIncrement = {onIncrement}/>)}\r\n             </div>);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n       \r\n        console.log (\"Counter com ponent mounted\");\r\n    }\r\n\r\n    constructor()\r\n    {\r\n       super();\r\n        console.log(\"counter's constructor called\");\r\n    }\r\n\r\n    componentDidUpdate (pp, ps)\r\n    {\r\nconsole.log({pp});\r\nconsole.log({ps});\r\n    }\r\n}\r\n \r\nexport default Counters;\r\n","\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\n\nclass App extends Component {\n  \n  state = {  \n    counters :[\n        {id:1,value:4},\n        {id:2,value:0},\n        {id:3,value:0},\n        {id:4,value:2},\n        {id:5,value:0}]\n}\n\nhandleDelete= counterId=>\n{\n   const updatedCounters = this.state.counters.filter(counter=>counter.id!==counterId);\n   this.setState({counters: updatedCounters});\n};\n\nhandleIncrement = counter=>\n{\n    const countersCopy = [...this.state.counters];\n    \n    const index = countersCopy.indexOf(counter);\n    \n    countersCopy[index] = {...counter};\n   \n    countersCopy[index].value++;\n           this.setState({counters:countersCopy});\n   \n}\n\nHandleReset =()=>\n{\n  console.log(\"Handle reset triggered\");\n    const resetCounters = this.state.counters.map(\n        c=>{\n            c.value = 0 ;\n            return c;\n        });\n\n        this.setState({counters:resetCounters});\n}\n \n  render() { \n    return (\n     <React.Fragment>\n      <NavBar  totalCounters = {this.state.counters.filter(c=>c.value>0).length}/>\n      <Counters counters={this.state.counters} onDelete={this.handleDelete} onIncrement={this.handleIncrement} onReset={this.HandleReset}/>\n      </React.Fragment>\n      );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}